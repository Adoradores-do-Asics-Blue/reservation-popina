{"ast":null,"code":"var _jsxFileName = \"/home/ricardo/Documentos/Shigeuo/web/gobarber-web/src/hooks/auth.tsx\";\nimport React, { createContext, useCallback, useState, useContext } from 'react';\nimport api from '../services/api';\nconst AuthContext = createContext({});\n\nconst AuthProvider = ({\n  children\n}) => {\n  const [data, setData] = useState(() => {\n    const token = localStorage.getItem('@popina:token');\n    const user = localStorage.getItem('@popina:user');\n\n    if (token && user) {\n      api.defaults.headers.authorization = `Bearer ${token}`;\n      return {\n        token,\n        user: JSON.parse(user)\n      };\n    }\n\n    return {};\n  });\n  const signOut = useCallback(() => {\n    localStorage.removeItem('@popina:token');\n    localStorage.removeItem('@popina:user');\n    setData({});\n  }, []);\n  const signIn = useCallback(async ({\n    email,\n    password\n  }) => {\n    const response = await api.post('sessions', {\n      email,\n      password\n    });\n    const {\n      token,\n      user\n    } = response.data;\n    localStorage.setItem('@popina:token', token);\n    localStorage.setItem('@popina:user', JSON.stringify(user));\n    api.defaults.headers.authorization = `Bearer ${token}`;\n    setData({\n      token,\n      user\n    });\n  }, []);\n  const updateUser = useCallback(user => {\n    localStorage.setItem('@popina:user', JSON.stringify(user));\n    setData({\n      token: data.token,\n      user\n    });\n  }, [setData, data.token]);\n  return /*#__PURE__*/React.createElement(AuthContext.Provider, {\n    value: {\n      user: data.user,\n      signIn,\n      signOut,\n      updateUser\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 5\n    }\n  }, children);\n};\n\nfunction useAuth() {\n  const context = useContext(AuthContext);\n  return context;\n}\n\nexport { AuthProvider, useAuth };","map":{"version":3,"sources":["/home/ricardo/Documentos/Shigeuo/web/gobarber-web/src/hooks/auth.tsx"],"names":["React","createContext","useCallback","useState","useContext","api","AuthContext","AuthProvider","children","data","setData","token","localStorage","getItem","user","defaults","headers","authorization","JSON","parse","signOut","removeItem","signIn","email","password","response","post","setItem","stringify","updateUser","useAuth","context"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,aAAhB,EAA+BC,WAA/B,EAA4CC,QAA5C,EAAsDC,UAAtD,QAAwE,OAAxE;AACA,OAAOC,GAAP,MAAgB,iBAAhB;AA0BA,MAAMC,WAAW,GAAGL,aAAa,CAAkB,EAAlB,CAAjC;;AAEA,MAAMM,YAAsB,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAkB;AAC/C,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBP,QAAQ,CAAY,MAAM;AAChD,UAAMQ,KAAK,GAAGC,YAAY,CAACC,OAAb,CAAqB,eAArB,CAAd;AACA,UAAMC,IAAI,GAAGF,YAAY,CAACC,OAAb,CAAqB,cAArB,CAAb;;AAEA,QAAIF,KAAK,IAAIG,IAAb,EAAmB;AACjBT,MAAAA,GAAG,CAACU,QAAJ,CAAaC,OAAb,CAAqBC,aAArB,GAAsC,UAASN,KAAM,EAArD;AAEA,aAAO;AAAEA,QAAAA,KAAF;AAASG,QAAAA,IAAI,EAAEI,IAAI,CAACC,KAAL,CAAWL,IAAX;AAAf,OAAP;AACD;;AAED,WAAO,EAAP;AACD,GAX+B,CAAhC;AAaA,QAAMM,OAAO,GAAGlB,WAAW,CAAC,MAAM;AAChCU,IAAAA,YAAY,CAACS,UAAb,CAAwB,eAAxB;AACAT,IAAAA,YAAY,CAACS,UAAb,CAAwB,cAAxB;AAEAX,IAAAA,OAAO,CAAC,EAAD,CAAP;AACD,GAL0B,EAKxB,EALwB,CAA3B;AAOA,QAAMY,MAAM,GAAGpB,WAAW,CAAC,OAAO;AAAEqB,IAAAA,KAAF;AAASC,IAAAA;AAAT,GAAP,KAA+B;AACxD,UAAMC,QAAQ,GAAG,MAAMpB,GAAG,CAACqB,IAAJ,CAAS,UAAT,EAAqB;AAC1CH,MAAAA,KAD0C;AAE1CC,MAAAA;AAF0C,KAArB,CAAvB;AAKA,UAAM;AAAEb,MAAAA,KAAF;AAASG,MAAAA;AAAT,QAAkBW,QAAQ,CAAChB,IAAjC;AAEAG,IAAAA,YAAY,CAACe,OAAb,CAAqB,eAArB,EAAsChB,KAAtC;AACAC,IAAAA,YAAY,CAACe,OAAb,CAAqB,cAArB,EAAqCT,IAAI,CAACU,SAAL,CAAed,IAAf,CAArC;AAEAT,IAAAA,GAAG,CAACU,QAAJ,CAAaC,OAAb,CAAqBC,aAArB,GAAsC,UAASN,KAAM,EAArD;AAEAD,IAAAA,OAAO,CAAC;AAAEC,MAAAA,KAAF;AAASG,MAAAA;AAAT,KAAD,CAAP;AACD,GAdyB,EAcvB,EAduB,CAA1B;AAgBA,QAAMe,UAAU,GAAG3B,WAAW,CAC3BY,IAAD,IAAgB;AACdF,IAAAA,YAAY,CAACe,OAAb,CAAqB,cAArB,EAAqCT,IAAI,CAACU,SAAL,CAAed,IAAf,CAArC;AAEAJ,IAAAA,OAAO,CAAC;AACNC,MAAAA,KAAK,EAAEF,IAAI,CAACE,KADN;AAENG,MAAAA;AAFM,KAAD,CAAP;AAID,GAR2B,EAS5B,CAACJ,OAAD,EAAUD,IAAI,CAACE,KAAf,CAT4B,CAA9B;AAYA,sBACE,oBAAC,WAAD,CAAa,QAAb;AACE,IAAA,KAAK,EAAE;AAAEG,MAAAA,IAAI,EAAEL,IAAI,CAACK,IAAb;AAAmBQ,MAAAA,MAAnB;AAA2BF,MAAAA,OAA3B;AAAoCS,MAAAA;AAApC,KADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAGGrB,QAHH,CADF;AAOD,CAxDD;;AA0DA,SAASsB,OAAT,GAAoC;AAClC,QAAMC,OAAO,GAAG3B,UAAU,CAACE,WAAD,CAA1B;AAEA,SAAOyB,OAAP;AACD;;AAED,SAASxB,YAAT,EAAuBuB,OAAvB","sourcesContent":["import React, { createContext, useCallback, useState, useContext } from 'react';\nimport api from '../services/api';\n\ninterface User {\n  id: string;\n  name: string;\n  email: string;\n  avatar_url: string;\n}\n\ninterface AuthState {\n  token: string;\n  user: User;\n}\n\ninterface SignInCredentials {\n  email: string;\n  password: string;\n}\n\ninterface AuthContextData {\n  user: User;\n  signIn(credentials: SignInCredentials): Promise<void>;\n  signOut(): void;\n  updateUser(user: User): void;\n}\n\nconst AuthContext = createContext<AuthContextData>({} as AuthContextData);\n\nconst AuthProvider: React.FC = ({ children }) => {\n  const [data, setData] = useState<AuthState>(() => {\n    const token = localStorage.getItem('@popina:token');\n    const user = localStorage.getItem('@popina:user');\n\n    if (token && user) {\n      api.defaults.headers.authorization = `Bearer ${token}`;\n\n      return { token, user: JSON.parse(user) };\n    }\n\n    return {} as AuthState;\n  });\n\n  const signOut = useCallback(() => {\n    localStorage.removeItem('@popina:token');\n    localStorage.removeItem('@popina:user');\n\n    setData({} as AuthState);\n  }, []);\n\n  const signIn = useCallback(async ({ email, password }) => {\n    const response = await api.post('sessions', {\n      email,\n      password,\n    });\n\n    const { token, user } = response.data;\n\n    localStorage.setItem('@popina:token', token);\n    localStorage.setItem('@popina:user', JSON.stringify(user));\n\n    api.defaults.headers.authorization = `Bearer ${token}`;\n\n    setData({ token, user });\n  }, []);\n\n  const updateUser = useCallback(\n    (user: User) => {\n      localStorage.setItem('@popina:user', JSON.stringify(user));\n\n      setData({\n        token: data.token,\n        user,\n      });\n    },\n    [setData, data.token],\n  );\n\n  return (\n    <AuthContext.Provider\n      value={{ user: data.user, signIn, signOut, updateUser }}\n    >\n      {children}\n    </AuthContext.Provider>\n  );\n};\n\nfunction useAuth(): AuthContextData {\n  const context = useContext(AuthContext);\n\n  return context;\n}\n\nexport { AuthProvider, useAuth };\n"]},"metadata":{},"sourceType":"module"}