{"ast":null,"code":"var _jsxFileName = \"/home/ricardo/Documentos/Shigeuo/web/gobarber-web/src/pages/Dashboard/index.tsx\";\nimport React, { useState, useCallback, useEffect, useMemo } from 'react';\nimport { isToday, format, parseISO, isAfter } from 'date-fns';\nimport ptBR from 'date-fns/locale/pt-BR';\nimport DayPicker from 'react-day-picker';\nimport 'react-day-picker/lib/style.css';\nimport { FiPower, FiClock } from 'react-icons/fi';\nimport { Link } from 'react-router-dom';\nimport { Container, Header, HeaderContent, Profile, Content, Schedule, NextAppointment, Section, Appointment, Calendar } from './styles';\nimport logoImg from \"../../assets/Logosemicone.svg\";\nimport { useAuth } from '../../hooks/auth';\nimport api from '../../services/api';\n\nconst Dashboard = () => {\n  const {\n    user,\n    signOut\n  } = useAuth();\n  const [selectedDate, setSelectedDate] = useState(new Date());\n  const [currentMonth, setCurrentMonth] = useState(new Date());\n  const [monthAvailability, setMonthAvailability] = useState([]);\n  const [appointments, setAppointments] = useState([]);\n  const handleDateChange = useCallback((day, modifiers) => {\n    if (modifiers.available && !modifiers.disabled) {\n      setSelectedDate(day);\n    }\n  }, []);\n  const handleMonthChange = useCallback(month => {\n    setCurrentMonth(month);\n  }, []);\n  useEffect(() => {\n    api.get(`/providers/${user.id}/month-availability`, {\n      params: {\n        year: currentMonth.getFullYear(),\n        month: currentMonth.getMonth() + 1\n      }\n    }).then(response => {\n      setMonthAvailability(response.data);\n    });\n  }, [currentMonth, user.id]);\n  useEffect(() => {\n    api.get('/appointments/me', {\n      params: {\n        year: selectedDate.getFullYear(),\n        month: selectedDate.getMonth() + 1,\n        day: selectedDate.getDate()\n      }\n    }).then(response => {\n      const appointmentsFormatted = response.data.map(appointment => {\n        return { ...appointment,\n          hourFormatted: format(parseISO(appointment.date), 'HH:mm')\n        };\n      });\n      setAppointments(appointmentsFormatted);\n    });\n  }, [selectedDate]);\n  const disabledDays = useMemo(() => {\n    const dates = monthAvailability.filter(monthDay => monthDay.available === false).map(monthDay => {\n      const year = currentMonth.getFullYear();\n      const month = currentMonth.getMonth();\n      return new Date(year, month, monthDay.day);\n    });\n    return dates;\n  }, [currentMonth, monthAvailability]);\n  const selectedDateAsText = useMemo(() => {\n    return format(selectedDate, \"'Dia' dd 'de' MMMM\", {\n      locale: ptBR\n    });\n  }, [selectedDate]);\n  const selectedWeekDay = useMemo(() => {\n    return format(selectedDate, 'cccc', {\n      locale: ptBR\n    });\n  }, [selectedDate]);\n  const morningAppointments = useMemo(() => {\n    return appointments.filter(appointment => {\n      return parseISO(appointment.date).getHours() < 12;\n    });\n  }, [appointments]);\n  const afternoonAppointments = useMemo(() => {\n    return appointments.filter(appointment => {\n      return parseISO(appointment.date).getHours() >= 12;\n    });\n  }, [appointments]);\n  const nextAppointment = useMemo(() => {\n    return appointments.find(appointment => isAfter(parseISO(appointment.date), new Date()));\n  }, [appointments]);\n  return /*#__PURE__*/React.createElement(Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Header, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(HeaderContent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: logoImg,\n    alt: \"popina\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Profile, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: user.avatar_url,\n    alt: user.name,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 15\n    }\n  }, \"Bem-vindo,\"), /*#__PURE__*/React.createElement(Link, {\n    to: \"/profile\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 17\n    }\n  }, user.name)))), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    onClick: signOut,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(FiPower, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 13\n    }\n  })))), /*#__PURE__*/React.createElement(Content, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Schedule, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 11\n    }\n  }, \"Hor\\xE1rios agendados\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 11\n    }\n  }, isToday(selectedDate) && /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 39\n    }\n  }, \"Hoje\"), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 13\n    }\n  }, selectedDateAsText), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 13\n    }\n  }, selectedWeekDay)), isToday(selectedDate) && nextAppointment && /*#__PURE__*/React.createElement(NextAppointment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 15\n    }\n  }, \"Agendamento a seguir\"), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: nextAppointment.user.avatar_url,\n    alt: nextAppointment.user.name,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 17\n    }\n  }, nextAppointment.user.name), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(FiClock, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 19\n    }\n  }), nextAppointment.hourFormatted))), /*#__PURE__*/React.createElement(Section, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 13\n    }\n  }, \"Manh\\xE3\"), morningAppointments.length === 0 && /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 15\n    }\n  }, \"Nenhum agendamento neste per\\xEDodo\"), morningAppointments.map(appointment => /*#__PURE__*/React.createElement(Appointment, {\n    key: appointment.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(FiClock, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 19\n    }\n  }), appointment.hourFormatted), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: appointment.user.avatar_url,\n    alt: appointment.user.name,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 19\n    }\n  }), /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 207,\n      columnNumber: 19\n    }\n  }, appointment.user.name))))), /*#__PURE__*/React.createElement(Section, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 213,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 214,\n      columnNumber: 13\n    }\n  }, \"Tarde e Noite\"), afternoonAppointments.length === 0 && /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 217,\n      columnNumber: 15\n    }\n  }, \"Nenhum agendamento neste per\\xEDodo\"), afternoonAppointments.map(appointment => /*#__PURE__*/React.createElement(Appointment, {\n    key: appointment.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 221,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 222,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(FiClock, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 223,\n      columnNumber: 19\n    }\n  }), appointment.hourFormatted), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 227,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: appointment.user.avatar_url,\n    alt: appointment.user.name,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 228,\n      columnNumber: 19\n    }\n  }), /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 233,\n      columnNumber: 19\n    }\n  }, appointment.user.name)))))), /*#__PURE__*/React.createElement(Calendar, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 239,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(DayPicker, {\n    weekdaysShort: ['D', 'S', 'T', 'Q', 'Q', 'S', 'S'],\n    fromMonth: new Date(),\n    disabledDays: [{\n      daysOfWeek: [0, 6]\n    }, ...disabledDays],\n    modifiers: {\n      available: {\n        daysOfWeek: [1, 2, 3, 4, 5]\n      }\n    },\n    onMonthChange: handleMonthChange,\n    selectedDays: selectedDate,\n    onDayClick: handleDateChange,\n    months: ['Janeiro', 'Fevereiro', 'Março', 'Abril', 'Maio', 'Junho', 'Julho', 'Agosto', 'Setembro', 'Outubro', 'Novembro', 'Dezembro'],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 240,\n      columnNumber: 11\n    }\n  }))));\n};\n\nexport default Dashboard;","map":{"version":3,"sources":["/home/ricardo/Documentos/Shigeuo/web/gobarber-web/src/pages/Dashboard/index.tsx"],"names":["React","useState","useCallback","useEffect","useMemo","isToday","format","parseISO","isAfter","ptBR","DayPicker","FiPower","FiClock","Link","Container","Header","HeaderContent","Profile","Content","Schedule","NextAppointment","Section","Appointment","Calendar","useAuth","api","Dashboard","user","signOut","selectedDate","setSelectedDate","Date","currentMonth","setCurrentMonth","monthAvailability","setMonthAvailability","appointments","setAppointments","handleDateChange","day","modifiers","available","disabled","handleMonthChange","month","get","id","params","year","getFullYear","getMonth","then","response","data","getDate","appointmentsFormatted","map","appointment","hourFormatted","date","disabledDays","dates","filter","monthDay","selectedDateAsText","locale","selectedWeekDay","morningAppointments","getHours","afternoonAppointments","nextAppointment","find","logoImg","avatar_url","name","length","daysOfWeek"],"mappings":"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","sourcesContent":["import React, { useState, useCallback, useEffect, useMemo } from 'react';\nimport { isToday, format, parseISO, isAfter } from 'date-fns';\nimport ptBR from 'date-fns/locale/pt-BR';\nimport DayPicker, { DayModifiers } from 'react-day-picker';\nimport 'react-day-picker/lib/style.css';\n\nimport { FiPower, FiClock } from 'react-icons/fi';\nimport { Link } from 'react-router-dom';\nimport {\n  Container,\n  Header,\n  HeaderContent,\n  Profile,\n  Content,\n  Schedule,\n  NextAppointment,\n  Section,\n  Appointment,\n  Calendar,\n} from './styles';\n\nimport logoImg from '../../assets/Logosemicone.svg';\nimport { useAuth } from '../../hooks/auth';\nimport api from '../../services/api';\n\ninterface MonthAvailabilityItem {\n  day: number;\n  available: boolean;\n}\n\ninterface Appointment {\n  id: string;\n  date: string;\n  hourFormatted: string;\n  user: {\n    name: string;\n    avatar_url: string;\n  };\n}\n\nconst Dashboard: React.FC = () => {\n  const { user, signOut } = useAuth();\n\n  const [selectedDate, setSelectedDate] = useState(new Date());\n  const [currentMonth, setCurrentMonth] = useState(new Date());\n\n  const [monthAvailability, setMonthAvailability] = useState<\n    MonthAvailabilityItem[]\n  >([]);\n\n  const [appointments, setAppointments] = useState<Appointment[]>([]);\n\n  const handleDateChange = useCallback((day: Date, modifiers: DayModifiers) => {\n    if (modifiers.available && !modifiers.disabled) {\n      setSelectedDate(day);\n    }\n  }, []);\n\n  const handleMonthChange = useCallback((month: Date) => {\n    setCurrentMonth(month);\n  }, []);\n\n  useEffect(() => {\n    api\n      .get(`/providers/${user.id}/month-availability`, {\n        params: {\n          year: currentMonth.getFullYear(),\n          month: currentMonth.getMonth() + 1,\n        },\n      })\n      .then(response => {\n        setMonthAvailability(response.data);\n      });\n  }, [currentMonth, user.id]);\n\n  useEffect(() => {\n    api\n      .get<Appointment[]>('/appointments/me', {\n        params: {\n          year: selectedDate.getFullYear(),\n          month: selectedDate.getMonth() + 1,\n          day: selectedDate.getDate(),\n        },\n      })\n      .then(response => {\n        const appointmentsFormatted = response.data.map(appointment => {\n          return {\n            ...appointment,\n            hourFormatted: format(parseISO(appointment.date), 'HH:mm'),\n          };\n        });\n\n        setAppointments(appointmentsFormatted);\n      });\n  }, [selectedDate]);\n\n  const disabledDays = useMemo(() => {\n    const dates = monthAvailability\n      .filter(monthDay => monthDay.available === false)\n      .map(monthDay => {\n        const year = currentMonth.getFullYear();\n        const month = currentMonth.getMonth();\n\n        return new Date(year, month, monthDay.day);\n      });\n\n    return dates;\n  }, [currentMonth, monthAvailability]);\n\n  const selectedDateAsText = useMemo(() => {\n    return format(selectedDate, \"'Dia' dd 'de' MMMM\", {\n      locale: ptBR,\n    });\n  }, [selectedDate]);\n\n  const selectedWeekDay = useMemo(() => {\n    return format(selectedDate, 'cccc', { locale: ptBR });\n  }, [selectedDate]);\n\n  const morningAppointments = useMemo(() => {\n    return appointments.filter(appointment => {\n      return parseISO(appointment.date).getHours() < 12;\n    });\n  }, [appointments]);\n\n  const afternoonAppointments = useMemo(() => {\n    return appointments.filter(appointment => {\n      return parseISO(appointment.date).getHours() >= 12;\n    });\n  }, [appointments]);\n\n  const nextAppointment = useMemo(() => {\n    return appointments.find(appointment =>\n      isAfter(parseISO(appointment.date), new Date()),\n    );\n  }, [appointments]);\n\n  return (\n    <Container>\n      <Header>\n        <HeaderContent>\n          <img src={logoImg} alt=\"popina\" />\n\n          <Profile>\n            <img src={user.avatar_url} alt={user.name} />\n            <div>\n              <span>Bem-vindo,</span>\n              <Link to=\"/profile\">\n                <strong>{user.name}</strong>\n              </Link>\n            </div>\n          </Profile>\n\n          <button type=\"button\" onClick={signOut}>\n            <FiPower />\n          </button>\n        </HeaderContent>\n      </Header>\n\n      <Content>\n        <Schedule>\n          <h1>Horários agendados</h1>\n          <p>\n            {isToday(selectedDate) && <span>Hoje</span>}\n            <span>{selectedDateAsText}</span>\n            <span>{selectedWeekDay}</span>\n          </p>\n\n          {isToday(selectedDate) && nextAppointment && (\n            <NextAppointment>\n              <strong>Agendamento a seguir</strong>\n              <div>\n                <img\n                  src={nextAppointment.user.avatar_url}\n                  alt={nextAppointment.user.name}\n                />\n\n                <strong>{nextAppointment.user.name}</strong>\n                <span>\n                  <FiClock />\n                  {nextAppointment.hourFormatted}\n                </span>\n              </div>\n            </NextAppointment>\n          )}\n\n          <Section>\n            <strong>Manhã</strong>\n\n            {morningAppointments.length === 0 && (\n              <p>Nenhum agendamento neste período</p>\n            )}\n\n            {morningAppointments.map(appointment => (\n              <Appointment key={appointment.id}>\n                <span>\n                  <FiClock />\n                  {appointment.hourFormatted}\n                </span>\n\n                <div>\n                  <img\n                    src={appointment.user.avatar_url}\n                    alt={appointment.user.name}\n                  />\n\n                  <strong>{appointment.user.name}</strong>\n                </div>\n              </Appointment>\n            ))}\n          </Section>\n\n          <Section>\n            <strong>Tarde e Noite</strong>\n\n            {afternoonAppointments.length === 0 && (\n              <p>Nenhum agendamento neste período</p>\n            )}\n\n            {afternoonAppointments.map(appointment => (\n              <Appointment key={appointment.id}>\n                <span>\n                  <FiClock />\n                  {appointment.hourFormatted}\n                </span>\n\n                <div>\n                  <img\n                    src={appointment.user.avatar_url}\n                    alt={appointment.user.name}\n                  />\n\n                  <strong>{appointment.user.name}</strong>\n                </div>\n              </Appointment>\n            ))}\n          </Section>\n        </Schedule>\n        <Calendar>\n          <DayPicker\n            weekdaysShort={['D', 'S', 'T', 'Q', 'Q', 'S', 'S']}\n            fromMonth={new Date()}\n            disabledDays={[{ daysOfWeek: [0, 6] }, ...disabledDays]}\n            modifiers={{\n              available: { daysOfWeek: [1, 2, 3, 4, 5] },\n            }}\n            onMonthChange={handleMonthChange}\n            selectedDays={selectedDate}\n            onDayClick={handleDateChange}\n            months={[\n              'Janeiro',\n              'Fevereiro',\n              'Março',\n              'Abril',\n              'Maio',\n              'Junho',\n              'Julho',\n              'Agosto',\n              'Setembro',\n              'Outubro',\n              'Novembro',\n              'Dezembro',\n            ]}\n          />\n        </Calendar>\n      </Content>\n    </Container>\n  );\n};\n\nexport default Dashboard;\n"]},"metadata":{},"sourceType":"module"}